/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package functional_ramming;

import java.awt.BorderLayout;
import java.util.*;

public class App {

    public static void main(String[] args) throws Exception {

        Arena a = new Arena();

        List<Double> values = new ArrayList<Double>();

        for (int i = 0; i < 360; i++) {
            double funcVal = 6 * (2 - Math.cos(i * 2 * Math.PI / 360.0));
            //double funcVal = 25;
            //double funcVal = i < 180 ? 5 : 25;
            values.add(funcVal);
        }

        Function function = new Function(values);

        
        Vector pos = new Vector(50, 250);
        double speed = 2;
        double size = 20;

        Rambda r = new Rambda(pos, function);
        RambdaController rc = new RambdaController(r);

        a.setRambda(r);
        a.setFunction(function);

        Chaser c = new Chaser(pos, speed, size, r, new ArrayList<Creature>());
        Chaser c2 = new Chaser(pos.add(new Vector(100,100)), 3, size, r, new ArrayList<Creature>());
        a.addChaser(c);
        a.addChaser(c2);

        FunctionPanel functionPanel = new FunctionPanel(function);

        GameFrame f = new GameFrame(functionPanel);

        ArenaPanel ap = new ArenaPanel(a);
        f.addKeyListener(rc);

        f.add(ap, BorderLayout.CENTER); 

        f.pack();
        f.setVisible(true);

        GameLoop gl = new GameLoop(a, ap, functionPanel);

        gl.run();
        
    }
}
