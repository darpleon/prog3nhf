/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package functional_ramming;

import java.awt.BorderLayout;
import java.util.*;

public class App {

    public static void main(String[] args) {


        List<Double> values0 = new ArrayList<Double>();

        for (int i = 0; i < 360; i++) {
            double funcVal = 10;
            values0.add(funcVal);
        }

        List<Double> values1 = new ArrayList<Double>();

        Function func0 = new Function("constant", values0);

        for (int i = 0; i < 360; i++) {
            double funcVal = 6 * (2 - Math.cos(i * 2 * Math.PI / 360.0));
            values1.add(funcVal);
        }

        Function func1 = new Function("wave", values1);

        List<Double> values2 = new ArrayList<Double>();

        for (int i = 0; i < 360; i++) {
            double funcVal = 30.0 * Math.exp( - (i / 30.0 - 6) * (i / 30.0 - 6) ) + 5;
            values2.add(funcVal);
        }
        
        Function func2 = new Function("impulse", values2);

        FunctionCollection functionCollection = new FunctionCollection();
        functionCollection.add(func0);
        functionCollection.add(func1);
        functionCollection.add(func2);


        Vector pos0 = new Vector(50, 50);
        double speed0 = 2;
        double size0 = 20;

        Level level0 = new Level("0");

        level0.add(new Chaser(pos0, speed0, size0, 1));
        level0.add(new Chaser(pos0, speed0, size0, 2));
        level0.add(new Chaser(pos0, speed0, size0, 3));
        level0.add(new Chaser(pos0, speed0, size0, 4));
        level0.add(new Chaser(pos0, speed0, size0, 5));

        List<Level> levels = new ArrayList<Level>();
        levels.add(level0);

        Game game = new Game(functionCollection, levels);

        GameFrame gameFrame = new GameFrame(game);

        GameLoop gl = new GameLoop(game, gameFrame);

        while (true) {
            gl.run();
            gameFrame.repaint();
        }

    }
}
